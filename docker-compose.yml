version: "3"
services:

  python-application:
    build:
      context: ./python-application
    container_name: python-application
    ports:
      - "81:5000"
    networks:
      - common_network

  prometheus:
    container_name: prometheus-svc
    image: prom/prometheus
    ports:
      - "9091:9090"
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - common_network

  grafana:
    image: grafana/grafana:5.0.4
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_BASIC_ENABLED=false  # Отключение базовой аутентификации в Grafana
      - GF_AUTH_ANONYMOUS_ENABLED=true  # Включение анонимного доступа к Grafana
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin  # Роль анонимного пользователя в Grafana
    networks:
      - common_network

  grafana-dashboards:
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - ./grafana-data:/grafana  # Примонтированная директория для сохранения данных Grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl  
        echo 'waiting for grafana'  
        sleep 5s  
        cd /grafana  
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json  
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"
    networks:
      - common_network

networks:
  common_network: